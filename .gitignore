# Python
__pycache__/
*.py[cod]
*.egg-info/
venv/
.env

# Logs
*.log

# MacOS
.DS_Store

# VSCode
.vscode/

# Data & artifacts
*.sqlite3
modal_debug*

# Flutter / Dart
**/build/
**/.dart_tool/
**/.idea/
**/.vscode/
**/pubspec.lock
**/android/.gradle/
**/android/local.properties
**/ios/Flutter/Generated.xcconfig
**/ios/Flutter/flutter_export_environment.sh
**/.flutter-plugins
**/.flutter-plugins-dependencies
**/.packages
**/mobile/.DS_Store

# Misc
**/.env
*.iml

terraform.tfstate*
*.pem
.env
*.tfvars


# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
Key point